########################################################################################
#               CONFIGURATION DU SCRIPT D'AUTOMATISATION PUSH GIT                   #
########################################################################################

########################################################################################
#                               PARAMETRAGE SLACK                                      #
########################################################################################
# URL du webhook Slack (nouveau format Slack App recommandé)
# Remplacez ci-dessous par l'URL de votre webhook Slack
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/XXXXXXX/XXXXXXX/XXXXXXXXXXXXXXXXXX"

# Canal Slack où envoyer les notifications (ex: #develop)
SLACK_CHANNEL="#mon-canal"

# Nom d'utilisateur affiché par le bot Slack
SLACK_USERNAME="webhookbot"

# Emoji du bot (ex :ghost: ou :robot_face:)
SLACK_ICON_EMOJI=":ghost:"

########################################################################################
#                               PARAMETRAGE GITLAB                                     #
########################################################################################
# ID du projet sur GitLab (visible dans l'URL du projet ou dans les réglages)
GITLAB_PROJECT_ID="12345678"

# Jeton d'accès personnel GitLab avec le scope 'api'
# Générer sur GitLab dans votre profil -> Settings -> Access Tokens
GITLAB_TOKEN="glpat-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

# Nom du groupe GitLab (optionnel)
GITLAB_GROUP_NAME="mon-groupe"

########################################################################################
#                               PARAMETRAGE EMAIL                                      #
########################################################################################
# Destinataires des e-mails séparés par des virgules (ex : "dev1@example.com,dev2@example.com")
EMAIL_RECIPIENTS="dev@example.com"

# Mode silencieux pour l'installation du mailer (1 = oui, 0 = non)
SILENT_INSTALL=1

########################################################################################
#                               PARAMETRAGE TESTS                                      #
########################################################################################
# COMMANDES DE TEST
# Indiquez la commande à exécuter avant le commit/push pour valider le code.
# Si cette commande échoue (code retour != 0), le push est annulé.
# Exemples :
# TEST_COMMAND="./run_tests.sh"
# TEST_COMMAND="npm test"
TEST_COMMAND="./run_tests.sh"

########################################################################################
#                               PARAMETRAGE QUALITE/LINTING                            #
########################################################################################
# COMMANDES DE QUALITÉ
# Indiquez la commande à exécuter pour lancer un linter ou un outil de contrôle qualité.
# Par exemple : QUALITY_COMMAND="npm run lint"
# Le script exécutera cette commande avant le commit (si -q est utilisé).
# QUALITY_COMMAND="npm run lint"

########################################################################################
#                                PARAMETRAGE CI/CD                                     #
########################################################################################
# URL pour déclencher un pipeline CI après le push (facultatif)
# Ex : CI_TRIGGER_URL="https://ci.example.com/trigger?token=XYZ"
CI_TRIGGER_URL=""

########################################################################################
#                            PARAMETRAGE DES PLATEFORMES GIT                           #
########################################################################################
# Choisissez la plateforme cible : gitlab, github, bitbucket
PLATFORM="gitlab"

########################################################################################
#                      PARAMETRAGE BITBUCKET/GITHUB (Optionnel)                       #
########################################################################################
# BITBUCKET (si PLATFORM=bitbucket)
# BITBUCKET_WORKSPACE="monworkspace"
# BITBUCKET_REPO_SLUG="monrepo"
# BITBUCKET_USER="monuser"
# BITBUCKET_APP_PASSWORD="monAppPassword"

# GITHUB (si PLATFORM=github)
# GITHUB_TOKEN="ghp_votreToken"
# GITHUB_REPO="username/myrepo"

########################################################################################
#                         PARAMETRAGE TICKETS (Optionnel)                              #
########################################################################################
# Si vous avez un système de tickets (ex: JIRA) et voulez détecter un pattern dans le commit
# Ajoutez ici l'URL de base. Le script détectera par ex. ABC-123 dans le commit
# et proposera un lien https://jira.example.com/browse/ABC-123
# TICKET_BASE_URL="https://jira.example.com/browse/"

########################################################################################
#                             FIN DE LA CONFIGURATION                                  #
########################################################################################
